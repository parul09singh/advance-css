/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    color: #777;
    padding: 30px;
}

.header {
    height: 95vh;
    background-image: linear-gradient(
        to right bottom, 
        rgba(165, 213, 111, 0.8), 
        rgba(40, 180, 133, 0.8))
        , url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    position: relative;
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    
}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    height: 35px;
}

.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;

    /*
        to hide the shaking at the backpart; for example an image is rotating, then adding 
        the below property would hide the background part
    */
    backface-visibility: hidden;
    margin-bottom: 60px;

}

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    
    /* 
    animation-delay: 3s;
    animation-iteration-count: 3; 
    */
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;

    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out;
} 

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
        /* transform: translateX(-100px) rotate(-50deg); */
    
    }

    /* 50% {
        transform: rotate(120deg);
    } */

    80% { 
        transform: translateX(10px);
    }

    100% {
        opacity: 1;
        transform: translateX(0px);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }
    80% { 
        transform: translateX(-10px);
    }
    100% {
        opacity: 1;
        transform: translateX(0px);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(30px);
    }
    
    100% {
        opacity: 1;
        transform: translateY(0px);
    }
}


/* pseudo classes are special state of a selector , 
we pseudo classes to style elements under special conditions such as hover, click, selecting a child etc.*/
.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block;
    border-radius: 100px;
    transition: all .2s;
    position: relative;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
}

.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.btn-white {
    background-color: #fff;
    color: #777;
}

.btn::after {
    /*must have property for this to function */
    /* pseudo element is like children, 
    so if the have properties similar to btn in terms of height & width,border-radius etc.*/
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn-white::after {
    background-color: #fff;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; /*fades-out*/
}

.btn-animated {
    /*Shorthand: animation-name animation-duration animation-timing-function animation-delay*/
    animation: moveInBottom .5s ease-out .75s;
    /* apply the styles at 0% of the animation otherwise the button will be visible at the same
    base-position and once the animation starts it will come from down to up; to avoid this we are using 
    animation-fill-mode: backwards; property*/
    animation-fill-mode: backwards;

}