@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
    /* transform: translateX(-100px) rotate(-50deg); */ }
  /* 50% {
        transform: rotate(120deg);
    } */
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translateX(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translateY(0); } }

*,
*::after,
*::before {
  padding: 0;
  margin: 0;
  box-sizing: inherit;
  /*now every element will inherit the box-sizing property as 'border-box' from body (@see line 35)*/ }

html {
  /*Changing the root font-size so that now 1rem = 10px instead of default (1rem = 16px)*/
  font-size: 10px;
  /*Providing font-size in px is a bad practice and will override the browser setting and
    restrict the users especially disabled users to increase the font-size by changing browser settings, 
    so in order to give them this capability we will provide values in percentage
    font-size: 100% would mean 16px default; but we want it to be equivalent to 
    10px so 10/16 = .625*100 = 62.5
    */
  font-size: 62.5%; }

body {
  box-sizing: border-box; }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /*font-size: 16px;*/
  color: #777;
  padding: 3rem;
  line-height: 1.7; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /*
        to hide the shaking at the backpart; for example an image is rotating, then adding 
        the below property would hide the background part
    */
  backface-visibility: hidden;
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /* 
        animation-delay: 3s;
        animation-iteration-count: 3; 
        */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  transition: all .2s;
  letter-spacing: .2rem; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2); }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.btn {
  /* pseudo classes are special state of a selector , 
        we pseudo classes to style elements under special conditions such as 
        hover, click, selecting a child etc.
    */ }
  .btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s;
    position: relative;
    font-size: 1.6rem; }
  .btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
    .btn:hover::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
      /*fades-out*/ }
  .btn:active {
    transform: translateY(-1px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }
  .btn--white {
    background-color: #fff;
    color: #777; }
    .btn--white::after {
      background-color: #fff; }
  .btn::after {
    /*must have property for this to function */
    /* pseudo element is like children, 
        so if the have properties similar to btn in terms of height & width,border-radius etc.*/
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s; }
  .btn--animated {
    /*Shorthand: animation-name animation-duration animation-timing-function animation-delay*/
    animation: moveInBottom .5s ease-out .75s;
    /* apply the styles at 0% of the animation otherwise the button will be visible at the same
        base-position and once the animation starts it will come from down to up; to avoid this we are using 
        animation-fill-mode: backwards; property*/
    animation-fill-mode: backwards; }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  transition: all .2s; }

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(0); }

.composition {
  position: relative; }
  .composition__photo {
    width: 50%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.8);
    border-radius: 2px;
    position: absolute;
    z-index: 10;
    transition: all .2s; }
    .composition__photo--p1 {
      left: 0;
      top: -2rem; }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
    .composition__photo:hover {
      transform: scale(1.05);
      box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 20; }

.row {
  max-width: 114rem;
  width: 100%;
  margin: 0 auto;
  content: "";
  display: table;
  clear: both; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row [class^="col-"] {
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem)/2); }
  .row .col-1-of-3 {
    width: calc((100% - 2*6rem)/3); }
  .row .col-2-of-3 {
    width: calc(2* ((100% - 2*6rem)/3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3*6rem)/4); }
  .row .col-2-of-4 {
    width: calc(2* ((100% - 3*6rem)/4) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3* ((100% - 3*6rem)/4) + 2 * 6rem); }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }
  .header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem; }
  .header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center; }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh; }
